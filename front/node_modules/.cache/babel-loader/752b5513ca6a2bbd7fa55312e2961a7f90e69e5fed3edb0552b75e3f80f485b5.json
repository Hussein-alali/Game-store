{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\OneDrive\\\\Desktop\\\\Folders\\\\WEB\\\\web_proj\\\\Game-store\\\\front\\\\src\\\\pages\\\\Products.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, Grid, Typography, Pagination, Box } from '@mui/material';\nimport ProductCard from '../components/ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsPage = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [page, setPage] = useState(1);\n  const productsPerPage = 6;\n\n  // Mock API call - replace with real fetch()\n  useEffect(() => {\n    const fetchProducts = async () => {\n      // Sample data structure\n      const mockProducts = [{\n        id: 1,\n        name: \"Red Dead Redemption\",\n        category: \"storytelling\",\n        price: 199.99,\n        image: \"\",\n        description: \"The most famous storytelling game of all time\",\n        rating: 4.8,\n        stock: 15\n      }\n      // Add 5+ more products...\n      ];\n      setProducts(mockProducts);\n    };\n    fetchProducts();\n  }, []);\n\n  // Pagination logic\n  const paginatedProducts = products.slice((page - 1) * productsPerPage, page * productsPerPage);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      component: \"h1\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: 700,\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: \"Our Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: paginatedProducts.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: Math.ceil(products.length / productsPerPage),\n        page: page,\n        onChange: (_, value) => setPage(value),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsPage, \"ckf1maVtP02JrrAwMFbmRBOBUrY=\");\n_c = ProductsPage;\nexport default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"names":["useState","useEffect","Container","Grid","Typography","Pagination","Box","ProductCard","jsxDEV","_jsxDEV","ProductsPage","_s","products","setProducts","page","setPage","productsPerPage","fetchProducts","mockProducts","id","name","category","price","image","description","rating","stock","paginatedProducts","slice","maxWidth","sx","py","children","variant","component","gutterBottom","fontWeight","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","product","item","xs","sm","md","display","justifyContent","mt","count","Math","ceil","length","onChange","_","value","color","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/OneDrive/Desktop/Folders/WEB/web_proj/Game-store/front/src/pages/Products.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Container, Grid, Typography, Pagination, Box } from '@mui/material';\nimport ProductCard from '../components/ProductCard';\n\nconst ProductsPage = () => {\n  const [products, setProducts] = useState([]);\n  const [page, setPage] = useState(1);\n  const productsPerPage = 6;\n\n  // Mock API call - replace with real fetch()\n  useEffect(() => {\n    const fetchProducts = async () => {\n      // Sample data structure\n      const mockProducts = [\n        {\n          id: 1,\n          name: \"Red Dead Redemption\",\n          category: \"storytelling\",\n          price: 199.99,\n          image: \"\",\n          description: \"The most famous storytelling game of all time\",\n          rating: 4.8,\n          stock: 15\n        },\n        // Add 5+ more products...\n      ];\n      setProducts(mockProducts);\n    };\n    fetchProducts();\n  }, []);\n\n  // Pagination logic\n  const paginatedProducts = products.slice(\n    (page - 1) * productsPerPage,\n    page * productsPerPage\n  );\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom sx={{ \n        fontWeight: 700,\n        mb: 4,\n        textAlign: 'center'\n      }}>\n        Our Collection\n      </Typography>\n\n      {/* Optional: Add ProductFilter component here */}\n\n      <Grid container spacing={4}>\n        {paginatedProducts.map((product) => (\n          <Grid item xs={12} sm={6} md={4} key={product.id}>\n            <ProductCard product={product} />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <Pagination\n          count={Math.ceil(products.length / productsPerPage)}\n          page={page}\n          onChange={(_, value) => setPage(value)}\n          color=\"primary\"\n        />\n      </Box>\n    </Container>\n  );\n};\n\nexport default ProductsPage;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAC5E,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMgB,eAAe,GAAG,CAAC;;EAEzB;EACAf,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC;MACA,MAAMC,YAAY,GAAG,CACnB;QACEC,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,qBAAqB;QAC3BC,QAAQ,EAAE,cAAc;QACxBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,+CAA+C;QAC5DC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE;MACT;MACA;MAAA,CACD;MACDb,WAAW,CAACK,YAAY,CAAC;IAC3B,CAAC;IACDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,iBAAiB,GAAGf,QAAQ,CAACgB,KAAK,CACtC,CAACd,IAAI,GAAG,CAAC,IAAIE,eAAe,EAC5BF,IAAI,GAAGE,eACT,CAAC;EAED,oBACEP,OAAA,CAACP,SAAS;IAAC2B,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACrCvB,OAAA,CAACL,UAAU;MAAC6B,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACL,EAAE,EAAE;QACvDM,UAAU,EAAE,GAAG;QACfC,EAAE,EAAE,CAAC;QACLC,SAAS,EAAE;MACb,CAAE;MAAAN,QAAA,EAAC;IAEH;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAIbjC,OAAA,CAACN,IAAI;MAACwC,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAZ,QAAA,EACxBL,iBAAiB,CAACkB,GAAG,CAAEC,OAAO,iBAC7BrC,OAAA,CAACN,IAAI;QAAC4C,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAlB,QAAA,eAC9BvB,OAAA,CAACF,WAAW;UAACuC,OAAO,EAAEA;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADGI,OAAO,CAAC3B,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE1C,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEPjC,OAAA,CAACH,GAAG;MAACwB,EAAE,EAAE;QAAEqB,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAArB,QAAA,eAC5DvB,OAAA,CAACJ,UAAU;QACTiD,KAAK,EAAEC,IAAI,CAACC,IAAI,CAAC5C,QAAQ,CAAC6C,MAAM,GAAGzC,eAAe,CAAE;QACpDF,IAAI,EAAEA,IAAK;QACX4C,QAAQ,EAAEA,CAACC,CAAC,EAAEC,KAAK,KAAK7C,OAAO,CAAC6C,KAAK,CAAE;QACvCC,KAAK,EAAC;MAAS;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC/B,EAAA,CA/DID,YAAY;AAAAoD,EAAA,GAAZpD,YAAY;AAiElB,eAAeA,YAAY;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}